{"version":3,"sources":["redux/actions.ts","components/CurrencyExchange/CurrencyExchange.tsx","redux/currencyReducer.ts","containers/CurrencyExchangeContainer/CurrencyEContainer.tsx","lessons/lesson1/lesson1.tsx","lessons/lesson3/API.ts","lessons/lesson3/lesson_3.ts","lessons/lesson3/Lesson3.tsx","lessons/lesson4/lesson_4.ts","lessons/lesson4/Lesson4.tsx","App.tsx","redux/state.ts","index.tsx"],"names":["ACTIONS_TYPE","CurrencyExchange","currenciesName","currentCurrency","currencyRate","isBuying","amountOfBYN","amountOfCurrency","changeCurrencyField","changeAction","changeCurrentCurrency","viewCurrency","Fragment","value","data-currency","onChange","className","map","currency","index","onClick","data-action","ChangeCurrencyFieldAC","type","CHANGE_CURRENCY_FIELD_TYPE","payload","ChangeActionAC","CHANGE_CHANGE_ACTION","initialState","currencies","currencyName","buyRate","sellRate","selectAll","store","CurrencyEContainer","useSelector","dispatch","useDispatch","e","currentTarget","isFinite","dataset","trigger","Number","toFixed","action","CHANGE_CURRENT_CURRENCY","ChangeCurrentCurrencyAC","Lesson1","configOMB","baseURL","key","axiosInstance","axios","create","API","searchFilmsByTitle","title","query","get","searchFilmsByType","console","log","then","response","data","post","body","userId","put","id","delete","Lesson3","useState","searchName","setSearchName","searchResult","setSearchResult","searchNameByType","setSearchNameByType","searchResultByType","setSearchResultByType","searchFilm","a","Search","Error","Response","JSON","stringify","searchByType","t","data-t","pendPromise","Promise","resPromise","resolve","rejPromise","reject","catch","threeSecPromise","setTimeout","handlePromise","promise","onSuccess","paramName","onError","createPromise","resolvePromise","rejectPromise","window","testObj","myProm","res","param","firstPromise","name","secondPromise","age","thirdPromise","city","all","result","Object","assign","Lesson4","App","reducers","combineReducers","state","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7b729ae.chunk.js","sourcesContent":["export enum ACTIONS_TYPE {\r\n    CHANGE_CURRENCY_FIELD_TYPE = 'CurrencyExchange/CHANGE_CURRENCY_FIELD_TYPE',\r\n    CHANGE_CHANGE_ACTION = 'CurrencyExchange/CHANGE_CHANGE_ACTION',\r\n    CHANGE_CURRENT_CURRENCY = 'CurrencyExchange/CHANGE_CURRENT_CURRENCY',\r\n}\r\n\r\n\r\nexport type ChangeCurrencyFieldType = {\r\n    type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE,\r\n    payload: {\r\n        amountOfBYN: string,\r\n        amountOfCurrency: string,\r\n    },\r\n};\r\n\r\nexport const ChangeCurrencyFieldAC = (amountOfBYN: string, amountOfCurrency: string): ChangeCurrencyFieldType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE,\r\n        payload: {\r\n            amountOfBYN,\r\n            amountOfCurrency\r\n        },\r\n    };\r\n};\r\n\r\nexport type ChangeAction = {\r\n    type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION,\r\n    payload: { isBuying: boolean }\r\n}\r\n    ;\r\n\r\nexport const ChangeActionAC = (isBuying: boolean): ChangeAction => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION,\r\n        payload: {\r\n            isBuying\r\n        },\r\n    };\r\n};\r\n\r\nexport type ChangeCurrentCurrencyType = {\r\n    type: ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY,\r\n    payload: { currentCurrency: string }\r\n};\r\n\r\nexport const ChangeCurrentCurrencyAC = (currentCurrency: string): ChangeCurrentCurrencyType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY,\r\n        payload: {\r\n            currentCurrency,\r\n        },\r\n    };\r\n};\r\n\r\nexport type CurrencyReducersTypes = ChangeCurrencyFieldType | ChangeAction | ChangeCurrentCurrencyType;","import React from 'react';\r\n\r\ntype CurrencyExchangePropsType = {\r\n    currenciesName: string[];\r\n    currentCurrency: string;\r\n    currencyRate: number;\r\n    isBuying: boolean;\r\n    amountOfBYN: string;\r\n    amountOfCurrency: string;\r\n    changeCurrencyField: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    changeAction: (e: React.MouseEvent<HTMLSpanElement>) => void;\r\n    changeCurrentCurrency: (e: React.MouseEvent<HTMLLIElement>) => void;\r\n};\r\n\r\nconst CurrencyExchange: React.FC<CurrencyExchangePropsType> = ({\r\n                                                                                  currenciesName,\r\n                                                                                  currentCurrency,\r\n                                                                                  currencyRate,\r\n                                                                                  isBuying,\r\n                                                                                  amountOfBYN,\r\n                                                                                  amountOfCurrency,\r\n                                                                                  changeCurrencyField,\r\n                                                                                  changeAction,\r\n                                                                                  changeCurrentCurrency,\r\n                                                                              }) => {\r\n    const viewCurrency = isBuying ? (\r\n        <React.Fragment>\r\n            <label>\r\n                You give the next amount of BYN:\r\n                <input value={amountOfBYN} data-currency=\"byn\" onChange={changeCurrencyField} />\r\n            </label>\r\n            <label>\r\n                You get the next amount of {currentCurrency}:\r\n                <input value={amountOfCurrency} data-currency=\"currency\" onChange={changeCurrencyField} />\r\n            </label>\r\n        </React.Fragment>\r\n    ) : (\r\n        <React.Fragment>\r\n            <label>\r\n                You give the next amount of {currentCurrency}:\r\n                <input value={amountOfCurrency} data-currency=\"currency\" onChange={changeCurrencyField} />\r\n            </label>\r\n            <label>\r\n                You get the next amount of BYN:\r\n                <input value={amountOfBYN} data-currency=\"byn\" onChange={changeCurrencyField} />\r\n            </label>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"currency\">\r\n            <h2>Currency exchange</h2>\r\n            <div className=\"currency-names\">\r\n                <p>Current currency:</p>\r\n                <ul>\r\n                    {currenciesName.map((currency: string, index: number) => {\r\n                        return (\r\n                            <li\r\n                                key={`${index}-${currency}`}\r\n                                className={`currencies ${currentCurrency === currency ? 'activeCurrency' : null}`}\r\n                                onClick={changeCurrentCurrency}\r\n                                data-currency={currency}\r\n                            >\r\n                                {currency}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className=\"currency-action\">\r\n        <span className={isBuying ? 'active' : ''} data-action=\"buy\" onClick={changeAction}>\r\n          Buy\r\n        </span>\r\n                <span className={isBuying ? '' : 'active'} data-action=\"sell\" onClick={changeAction}>\r\n          Sell\r\n        </span>\r\n            </div>\r\n            <div className=\"fields\">\r\n                <p>Currency rate: {currencyRate}</p>\r\n                {viewCurrency}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrencyExchange;\r\n","import {ACTIONS_TYPE, CurrencyReducersTypes} from './actions';\r\nimport {IGlobalState} from './state';\r\n\r\n\r\nexport type CurrencyType = {\r\n    currencyName: string;\r\n    buyRate: number;\r\n    sellRate: number;\r\n};\r\nexport type CurrencyState = {\r\n    currencies: Array<CurrencyType>;\r\n    currentCurrency: string;\r\n    isBuying: boolean;\r\n    amountOfBYN: string;\r\n    amountOfCurrency: string;\r\n};\r\n\r\nconst initialState: CurrencyState = {\r\n    currencies: [\r\n        {\r\n            currencyName: 'USD',\r\n            buyRate: 2.62,\r\n            sellRate: 2.58,\r\n        },\r\n        {\r\n            currencyName: 'EUR',\r\n            buyRate: 3.1,\r\n            sellRate: 3.06,\r\n        },\r\n        {\r\n            currencyName: 'RUR',\r\n            buyRate: 0.0345,\r\n            sellRate: 0.0341,\r\n        },\r\n    ],\r\n    currentCurrency: 'USD',\r\n    isBuying: true,\r\n    amountOfBYN: '',\r\n    amountOfCurrency: '',\r\n};\r\n\r\nexport const currencyReducer = (state: CurrencyState = initialState, action: CurrencyReducersTypes): CurrencyState => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case ACTIONS_TYPE.CHANGE_CHANGE_ACTION:\r\n        case ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                //при переходе с BUY на SELL или обратно обновляем  и при переходе с одной валюты на другую тоже\r\n                amountOfBYN: '',\r\n                amountOfCurrency: '',\r\n            }\r\n        // case ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY:\r\n        //     return {\r\n        //         ...state,\r\n        //         ...action.payload,\r\n        //         //при переходе с одной валюты на другую обновляем инпуты\r\n        //         amountOfBYN: '',\r\n        //         amountOfCurrency: '',\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// export const selectCurrencies = (store: IGlobalState) =>() => store.currency.currencies;\r\nexport const selectAll = (store: IGlobalState) => store.currency;\r\n","import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType, selectAll} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\n\r\n// const CurrencyEContainer: React.FC<TProps> = props => {\r\nconst CurrencyEContainer = () => {\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    //     setCurrencyAmount,\r\n    //     setAction,\r\n    //     changeCurrency,\r\n    // } = props;\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    // } = props;\r\n\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = useSelector(selectAll);\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>();\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    // ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    // ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        // e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        // e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n// @ts-ignore\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>): any => {\r\n//     return {\r\n//         setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction(isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency(currency: string) {\r\n//             dispatch(ChangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n// const connector = connect(mapStateToProps, {});\r\n//\r\n// type TProps = ConnectedProps<typeof connector>;\r\n//\r\n// export default connector(CurrencyEContainer);\r\nexport default CurrencyEContainer;\r\n\r\n","import React from 'react';\nimport CurrencyExchangeContainer from '../../containers/CurrencyExchangeContainer/CurrencyEContainer'\n\n// Redux\n// https://tproger.ru/translations/redux-for-beginners/\n// https://monsterlessons.com/project/series/redux-js-dlya-nachinayushih\n// https://xsltdev.ru/react/redux/intro/\n\n// Typescript genetic\n// https://habr.com/ru/post/455473/\n// https://habr.com/ru/company/ruvds/blog/426729/\n\n// Typescript from zero + typescript generic (English video)\n// https://www.youtube.com/watch?v=3d9XqFmCmQw\n\n// Container component\n// https://habr.com/ru/company/ruvds/blog/446206/\n\n// Dispatch\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\n\nconst Lesson1: React.FunctionComponent = () => {\n    return (\n    <React.Fragment>\n        <CurrencyExchangeContainer />\n    </React.Fragment>\n  );\n};\n\nexport default Lesson1;\n\n","import axios from 'axios';\r\n\r\nconst configOMB = {\r\n    baseURL: 'http://www.omdbapi.com',\r\n};\r\nconst key = '9fe4584a';\r\nconst axiosInstance = axios.create(configOMB);\r\n\r\nconst API = {\r\n    searchFilmsByTitle: (title: string) => {\r\n        const query = `/?apikey=${key}&s=${title}`\r\n        return axiosInstance.get<{}, TestType<ResponseType>>(`https://cors-everywhere-me.herokuapp.com/` + configOMB.baseURL + query)\r\n\r\n    },\r\n    searchFilmsByType: (title: string, type: string) => {\r\n        const query = `/?apikey=${key}&type=${type}&s=${title}`\r\n        return axiosInstance.get(`https://cors-everywhere-me.herokuapp.com/` + configOMB.baseURL + query)\r\n    }\r\n};\r\n\r\ntype TestType<T> = {\r\n    data: T\r\n}\r\n\r\ntype ResponseType = {\r\n    Search: Array<string>\r\n    Error: string\r\n    Response: string\r\n}\r\n\r\nexport default API;\r\n","import axios from 'axios';\r\n\r\nconsole.log('lesson 3');\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\naxios.get('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then((response) => response.data)\r\n    .then((data) => console.log(data));\r\n\r\naxios.get('https://jsonplaceholder.typicode.com/posts')\r\n    .then((response) => response.data)\r\n    .then((data) => console.log(data));\r\n\r\naxios.post('https://jsonplaceholder.typicode.com/posts', {\r\n        title: 'foo',\r\n        body: 'bar',\r\n        userId: 1,\r\n})\r\n    .then((response) => response.data)\r\n    .then((data) => console.log(data));\r\n\r\naxios.put('https://jsonplaceholder.typicode.com/posts/1', {\r\n        id: 1,\r\n        title: 'foo',\r\n        body: 'bar',\r\n        userId: 1,\r\n\r\n})\r\n    .then((response) => response.data)\r\n    .then((data) => console.log(data));\r\n\r\naxios.delete('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then((response) => response.data)\r\n    .then((data) => console.log(data));\r\n\r\n// just a plug\r\nexport default ()=>{};","import React, {useState} from 'react';\r\nimport API from './API';\r\nimport './lesson_3';\r\n\r\nconst Lesson3 = () => {\r\n\r\n    const [searchName, setSearchName] = useState('');\r\n    const [searchResult, setSearchResult] = useState('');\r\n    const [searchNameByType, setSearchNameByType] = useState('');\r\n    const [searchResultByType, setSearchResultByType] = useState('');\r\n\r\n    // const searchFilm = () => {\r\n    //     API.searchFilmsByTitle(searchName)\r\n    //         .then(({data}) => {\r\n    //             const {Search, Error, Response} = data;\r\n    //             Response === 'True' ? setSearchResult(JSON.stringify(Search)) : setSearchResult(Error)\r\n    //         })\r\n    // };\r\n\r\n    const searchFilm = async () => {\r\n        try {\r\n            const {data} = await API.searchFilmsByTitle(searchName)\r\n            const {Search, Error, Response} = data;\r\n            Response === 'True' ? setSearchResult(JSON.stringify(Search)) : setSearchResult(Error)\r\n        } catch (err) {\r\n            console.log('err', err)\r\n        }\r\n    };\r\n\r\n    // const searchByType = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    //     const type: string = e.currentTarget.dataset.t ? e.currentTarget.dataset.t : '';\r\n    //     API.searchFilmsByType(searchNameByType, type)\r\n    //         .then(({data}) => {\r\n    //             const {Search, Error, Response} = data;\r\n    //             Response === 'True' ? setSearchResultByType(JSON.stringify(Search)) : setSearchResultByType(Error)\r\n    //         })\r\n    // }\r\n\r\n    const searchByType = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        const type: string = e.currentTarget.dataset.t ? e.currentTarget.dataset.t : '';\r\n        try {\r\n            const {data} = await API.searchFilmsByType(searchNameByType, type)\r\n            const {Search, Error, Response} = data;\r\n            Response === 'True' ? setSearchResultByType(JSON.stringify(Search)) : setSearchResultByType(Error)\r\n        } catch (err) {\r\n            console.log('err', err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Promises</h1>\r\n            <div>\r\n                <h3><p>Search by name:</p></h3>\r\n                <input type=\"text\" value={searchName} onChange={(e) => setSearchName(e.currentTarget.value)}/>\r\n                <button onClick={searchFilm}>Search</button>\r\n                <div>\r\n                    {searchResult}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3><p>Search by type:</p></h3>\r\n                <input type=\"text\" value={searchNameByType}\r\n                       onChange={(e) => setSearchNameByType(e.currentTarget.value)}/>\r\n                <button onClick={searchByType} data-t=\"movie\">Movie</button>\r\n                <button onClick={searchByType} data-t=\"series\">Series</button>\r\n                <div>\r\n                    {searchResultByType}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Lesson3;","console.log('lesson 4');\r\n\r\n// http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n\r\n\r\n// Task 01\r\n// Создайте промис, который постоянно находиться в состоянии pending.\r\n// В конструкторе промиса выведите в консоль сообщение \"Promise is created\".\r\n\r\nlet pendPromise = new Promise(() => {\r\n    console.log('Promise is created')\r\n});\r\nconsole.log('Lesson 4 task 01: ', pendPromise)\r\n\r\n// Task 02\r\n// Создайте промис, который после создания сразу же переходит в состояние resolve\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\nlet resPromise = new Promise((resolve) => {\r\n    resolve('Promise Data')\r\n});\r\nconsole.log('Lesson 4 task 02', resPromise)\r\nresPromise.then(data => console.log('Lesson 4 task 02: ', data))\r\n\r\n// Task 03\r\n// Создайте промис, который после создания сразу же переходит в состояние rejected\r\n// и возвращает строку 'Promise Error'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\nlet rejPromise = new Promise((resolve, reject) => {\r\n    reject('Promise Error')\r\n});\r\nconsole.log('Lesson 4 task 03', rejPromise)\r\nrejPromise.catch(data => console.log('Lesson 4 task 03: ', data))\r\n\r\n// Task 04\r\n// Создайте промис, который переходит в состояние resolved через 3с.\r\n// (Используйте setTimeout)\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\nlet threeSecPromise = new Promise((resolve) => {\r\n    setTimeout(() => {\r\n        resolve('Promise Data')\r\n    }, 3000)\r\n});\r\nconsole.log(threeSecPromise)\r\nthreeSecPromise.then(data => console.log('Lesson 4 task 04: ', data))\r\n\r\n// Task 05\r\n// Создайте литерал объекта handlePromise со следующими свойствами:\r\n// promise, resolve, reject, onSuccess, onError\r\n// Проинициализируйте первые три свойства null,\r\n// а последние два функциями, которые принимают один параметр и выводят\r\n// в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n// вторая - `Promise is rejected with error: ${paramName}`\r\n// Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n// Первый обработчик, создает промис, заполняет первые три свойства,\r\n// описаного выше объекта: свойство promise получает новый созданный промис,\r\n// свойства resolve и reject получают ссылки на соответствующие функции\r\n// resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\n\r\ntype HandlePromisePropsType = {\r\n    promise: null | Promise<any>,\r\n    resolve: null | Function,\r\n    reject: null | Function,\r\n    onSuccess: (paramName: string) => void\r\n    onError: (paramName: string) => void\r\n}\r\n\r\nconst handlePromise: HandlePromisePropsType = {\r\n    promise: null,\r\n    resolve: null,\r\n    reject: null,\r\n    onSuccess: (paramName: string) => {\r\n        console.log(`Promise is resolved with data: ${paramName}`)\r\n    },\r\n    onError: (paramName: string) => {\r\n        console.log(`Promise is rejected with error: ${paramName}`)\r\n    }\r\n}\r\n\r\nexport const createPromise = () => {\r\n    handlePromise.promise = new Promise((resolve, reject) => {\r\n        handlePromise.resolve = resolve;\r\n        handlePromise.reject = reject;\r\n    });\r\n    handlePromise.promise\r\n        .then(handlePromise.onSuccess)\r\n        .catch(handlePromise.onError)\r\n}\r\n\r\nexport const resolvePromise = () => {\r\n    handlePromise.resolve && handlePromise.resolve('Lesson 4 task 5: Success');\r\n}\r\n\r\nexport const rejectPromise = () => {\r\n    handlePromise.reject && handlePromise.reject('Lesson 4 task 5: Error')\r\n}\r\n\r\n// @ts-ignore\r\nwindow.testObj = handlePromise\r\n\r\n\r\n// Task 06\r\n// Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n// Создайте функцию onSuccess, которая получает один параметр,\r\n// прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n// Создайте функцию print, которая выводит в консоль значение своего параметра\r\n// Добавьте два метода then и передайте созданные функции.\r\n\r\nlet myProm = new Promise((resolve) => {\r\n    return setTimeout(() => {\r\n        resolve('My name is')\r\n    }, 1000)\r\n})\r\n\r\nlet onSuccess = (param: string) => {\r\n    return param + ' Denis'\r\n}\r\n\r\n\r\nlet print = (param: string) => {\r\n    console.log('Lesson 4 task 06: ', param)\r\n}\r\n\r\nmyProm\r\n    .then((resolve) => {\r\n        return onSuccess(resolve as string)\r\n    })\r\n    .then(res => {\r\n        print(res)\r\n    })\r\n\r\n// Task 7\r\n// Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n// второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n// Получите результаты работы промисов, объедините свойства объектов\r\n// и выведите в консоль {name, age, city}\r\n\r\nlet firstPromise = new Promise((resolve) => {\r\n    return setTimeout(() => {\r\n        resolve({name: 'Anna'})\r\n    }, 2000)\r\n})\r\n\r\nlet secondPromise = new Promise((resolve) => {\r\n    return setTimeout(() => {\r\n        resolve({age: 16})\r\n    }, 3000)\r\n})\r\n\r\nlet thirdPromise = new Promise((resolve) => {\r\n    return setTimeout(() => {\r\n        resolve({city: ''})\r\n    }, 4000)\r\n})\r\n\r\nPromise.all([firstPromise, secondPromise, thirdPromise])\r\n    .then(data => {\r\n        const result = Object.assign(data[0], data[1], data[2])\r\n        console.log('Lesson 4 task 07: ', result)\r\n    })\r\n\r\n// just a plug\r\nexport default () => {};","import React from 'react'\r\nimport './lesson_4';\r\nimport {createPromise, rejectPromise, resolvePromise} from './lesson_4';\r\n\r\nconst Lesson4 = () => {\r\n    return (\r\n        <div>\r\n            <button onClick={createPromise} id=\"btn-create-promise\">Create Promise</button>\r\n            <button onClick={resolvePromise} id=\"btn-resolve-promise\">Resolve Promise</button>\r\n            <button onClick={rejectPromise} id=\"btn-reject-promise\">Reject Promise</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lesson4;","import React from 'react';\r\nimport './App.css';\r\nimport Lesson1 from './lessons/lesson1/lesson1';\r\nimport Lesson3 from './lessons/lesson3/Lesson3';\r\nimport Lesson4 from './lessons/lesson4/Lesson4';\r\n// import Lesson1 from './lessons/lesson1/lesson1';\r\n// import './lessons/lesson2/lesson2';\r\n// import Lesson3 from './lessons/lesson3/Lesson3';\r\n// import Lesson4 from './lessons/lesson4/Lesson4';\r\n// import './lessons/lesson5/lesson5';\r\n// import './lessons/lesson6/lesson6';\r\n// import './lessons/lesson7/lesson7';\r\n// import './lessons/lesson8/lesson8';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            <Lesson1 />\r\n            <Lesson3 />\r\n            <Lesson4 />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { currencyReducer } from './currencyReducer';\r\n\r\nconst reducers = combineReducers({\r\n    currency: currencyReducer,\r\n});\r\nexport type IGlobalState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/state';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}